(* default interface file generated by ocaml.
   TODO : make some stuff abstract (private in java lingo) *)

(* Tips on how to split the library in different files :
   - If you want to do a file to host values pertaining to a certain type, for
     instance [program], name the file [program.ml] and type for programs [t].
     This way you get to type `Program.t` instead of `Program.program`.
   - This file describe the interface of the whole library. Therefore you need to
     specify that there are submodules if you want to expose them. To continue on
     our previous example, you need to add :
     [module Program : sig ... end]. In between the [...], put every value or
     type from [Program] that you want to expose. If you want to expose all of
     them, add the following instead :
     [module Program : module type of Program]. *)

module Prob : module type of Prob

module Dist : module type of Dist

module Model : module type of Model

module Sdist : module type of Sdist

type prob = Prob.t

type 'a dist = 'a Dist.t

type 'a model = 'a Model.t

val infer : 'a model -> 'a dist
